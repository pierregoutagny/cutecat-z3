Reason: canceled
Statistics:
(:added-eqs                       822430
 :arith-eq-adapter                151661
 :arith-assume-eqs                2570
 :arith-bound-propagations-lp     26674
 :arith-branch                    99124
 :arith-conflicts                 54084
 :arith-cube-calls                31082
 :arith-cube-success              20
 :arith-diseq                     19694
 :arith-fixed-eqs                 140972
 :arith-gcd-calls                 125642
 :arith-gomory-cuts               40742
 :arith-grobner-calls             1296
 :arith-grobner-conflicts         33
 :arith-hnf-calls                 4
 :arith-horner-calls              2264
 :arith-horner-conflicts          1
 :arith-horner-cross-nested-forms 15858
 :arith-lower                     426097
 :arith-make-feasible             459555
 :arith-max-columns               235
 :arith-max-rows                  133
 :arith-nla-add-bounds            7901
 :arith-nla-lemmas                1297
 :arith-nla-propagate-bounds      951
 :arith-nla-propagate-eq          1415
 :arith-nra-calls                 4977
 :arith-offset-eqs                2130
 :arith-patches                   125642
 :arith-patches-success           1496
 :arith-upper                     387742
 :conflicts                       63445
 :datatype-accessor-ax            3668
 :datatype-constructor-ax         8964
 :datatype-splits                 1480
 :decisions                       387730
 :del-clause                      290311
 :final-checks                    146044
 :interface-eqs                   1285
 :max-memory                      261.70
 :memory                          261.70
 :minimized-lits                  36821
 :mk-bool-var                     987335
 :mk-clause                       290577
 :num-allocs                      21427064152167.00
 :num-checks                      77300
 :propagations                    242517
 :recfun-macro-expansion          19829
 :rlimit-count                    313593329
 :time                            0.10)
Solver:
(declare-datatypes ((unit 0)) (((unit))))
(declare-datatypes ((SituationFamilialeCalculAPL 0)) (((mk!PersonneSeule (PersonneSeule!0 unit)) (mk!Couple (Couple!0 unit)))))
(declare-datatypes ((ZoneDHabitation 0)) (((mk!Zone1 (Zone1!0 unit)) (mk!Zone2 (Zone2!0 unit)) (mk!Zone3 (Zone3!0 unit)))))
(declare-fun loyer_principal_in () Int)
(declare-fun |ressources_ménage_arrondies_in| () Int)
(declare-fun date_courante_in () Int)
(declare-fun |nombre_personnes_à_charge_in| () Int)
(declare-fun |réduction_loyer_solidarité_in| () Int)
(declare-fun colocation_in () Bool)
(declare-fun logement_est_chambre_in () Bool)
(declare-fun |logement_meublé_d842_2_in| () Bool)
(declare-fun situation_familiale_calcul_apl_in () SituationFamilialeCalculAPL)
(declare-fun zone_in () ZoneDHabitation)
(declare-fun |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|
             ()
             Bool)
(define-funs-rec ( ( !round! ((x!1 Real)) Int))
                 ( (let ((a!1 (- (to_int (+ (- x!1) (/ 1.0 2.0))))))
                     (ite (>= x!1 0.0) (to_int (+ x!1 (/ 1.0 2.0))) a!1))))
(assert (>= loyer_principal_in 0))
(assert (>= |ressources_ménage_arrondies_in| 0))
(assert (>= date_courante_in 0))
(assert (not (not (<= |nombre_personnes_à_charge_in| 10))))
(assert (>= |réduction_loyer_solidarité_in| 0))
(assert (not (not (>= date_courante_in 3926))))
(assert (>= date_courante_in 3560))
(assert (>= |nombre_personnes_à_charge_in| 0))
(assert (not (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (>= date_courante_in 3560))
(assert (not (not (not (and logement_est_chambre_in colocation_in)))))
(assert |logement_meublé_d842_2_in|)
(assert (not (= 3.0 (to_real 0))))
(assert (not (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (not (= |nombre_personnes_à_charge_in| 0)))
(assert (not (= |nombre_personnes_à_charge_in| 1)))
(assert (not (= |nombre_personnes_à_charge_in| 2)))
(assert (not (= |nombre_personnes_à_charge_in| 3)))
(assert (not (= |nombre_personnes_à_charge_in| 4)))
(assert (not (= |nombre_personnes_à_charge_in| 5)))
(assert (not (= |nombre_personnes_à_charge_in| 6)))
(assert (not (and (not (<= 4383 date_courante_in)) (>= date_courante_in 3652))))
(assert (not (and (>= date_courante_in 4383) (not (<= 4564 date_courante_in)))))
(assert (not (and (>= date_courante_in 4564) (<= date_courante_in 4747))))
(assert (>= date_courante_in 4748))
(assert (not (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in)))
(assert (not (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926))))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in)))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (not (and (>= date_courante_in 5021) colocation_in)))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in)) colocation_in))
(assert (not ((_ is mk!Couple) situation_familiale_calcul_apl_in)))
(assert ((_ is mk!PersonneSeule) situation_familiale_calcul_apl_in))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in)))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in)))
(assert (>= date_courante_in 4748))
(assert (not (= |nombre_personnes_à_charge_in| 0)))
(assert (not (= |nombre_personnes_à_charge_in| 1)))
(assert (not (= |nombre_personnes_à_charge_in| 2)))
(assert (not (= |nombre_personnes_à_charge_in| 3)))
(assert (not (= |nombre_personnes_à_charge_in| 4)))
(assert (not (= |nombre_personnes_à_charge_in| 5)))
(assert (not (= |nombre_personnes_à_charge_in| 6)))
(assert (not (and (>= date_courante_in 4564) (<= date_courante_in 4747))))
(assert (not (and (>= date_courante_in 4383) (not (<= 4564 date_courante_in)))))
(assert (not (and (not (<= 4383 date_courante_in)) (>= date_courante_in 3652))))
(assert (not (>= date_courante_in 5021)))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (not (= |nombre_personnes_à_charge_in| 0)))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (not (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in)))))
(assert (not (and (>= date_courante_in 5021)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 5021)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 5021)
          colocation_in
          (>= |nombre_personnes_à_charge_in| 1))))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (and (>= date_courante_in 4564)
     (not (<= 5021 date_courante_in))
     colocation_in
     (>= |nombre_personnes_à_charge_in| 1)))
(assert (not ((_ is mk!Zone3) zone_in)))
(assert (not (not ((_ is mk!Zone2) zone_in))))
(assert (not ((_ is mk!Zone1) zone_in)))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in
          (>= |nombre_personnes_à_charge_in| 1))))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in
          (>= |nombre_personnes_à_charge_in| 1))))
(assert (not (and (>= date_courante_in 5021)
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (>= date_courante_in 5021) logement_est_chambre_in)))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          logement_est_chambre_in)))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          logement_est_chambre_in)))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          logement_est_chambre_in)))
(assert (>= date_courante_in 3560))
(assert (not ((_ is mk!Zone3) zone_in)))
(assert ((_ is mk!Zone2) zone_in))
(assert (not ((_ is mk!Zone1) zone_in)))
(assert (>= date_courante_in 3560))
(assert (not ((_ is mk!Zone3) zone_in)))
(assert ((_ is mk!Zone2) zone_in))
(assert (not ((_ is mk!Zone1) zone_in)))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 4043.0) (* 4043.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!2 (<= ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))
               (+ 27774 a!1))))
  (not (not a!2)))))
(assert (not (>= date_courante_in 5021)))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (let ((a!1 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!2 (to_real ((_ !round! 0)
                      (* 1272.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!3 (>= ((_ !round! 0)
                 (+ (/ 9537.0 40.0)
                    (* (/ 17.0 200.0) a!1)
                    (* (/ 17.0 200.0) a!2)))
               3663)))
  (not a!3))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (not (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926))))
(assert (not (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 5390.0) (* 5390.0 (to_real |nombre_personnes_à_charge_in|))))))
  (not (= (+ 37032 a!1) 0))))
(assert (not (= 100.0 (to_real 0))))
(assert (not (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (let ((a!1 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!2 ((_ !round! 0)
             (+ (- 5390.0) (* 5390.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!3 (* 100.0 (/ a!1 (+ 37032.0 (to_real a!2))))))
(let ((a!4 (not (>= (to_real ((_ !round! 0) a!3)) 45.0))))
  (not a!4)))))
(assert (let ((a!1 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!2 ((_ !round! 0)
             (+ (- 5390.0) (* 5390.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!3 (* 100.0 (/ a!1 (+ 37032.0 (to_real a!2))))))
(let ((a!4 (not (>= (to_real ((_ !round! 0) a!3)) 75.0))))
  (and (>= (to_real ((_ !round! 0) a!3)) 45.0) a!4)))))
(assert (not (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in))))
(assert (not (= 100000.0 (to_real 0))))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 196800.0)
                (* 32800.0 (to_real |nombre_personnes_à_charge_in|)))))
      (a!2 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!3 ((_ !round! 0)
             (+ (- 5390.0) (* 5390.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!4 (* 100.0 (/ a!2 (+ 37032.0 (to_real a!3))))))
(let ((a!5 (+ (- (/ 405.0 2.0)) (* (/ 9.0 2.0) (to_real ((_ !round! 0) a!4))))))
(let ((a!6 (+ (/ 209.0 10000.0)
              (* (- (/ 3.0 5000.0)) (to_real |nombre_personnes_à_charge_in|))
              (* (/ 1.0 100000.0) (to_real ((_ !round! 0) a!5))))))
(let ((a!7 (* (+ (- 997500.0)
                 (to_real |ressources_ménage_arrondies_in|)
                 (* (- 1.0) (to_real a!1)))
              a!6)))
  (not (not (<= 0 ((_ !round! 0) a!7))))))))))

