Reason: (incomplete (theory arithmetic))
Statistics:
(:added-eqs                       85470
 :arith-eq-adapter                15695
 :arith-assume-eqs                460
 :arith-bound-propagations-lp     1888
 :arith-branch                    10049
 :arith-conflicts                 5597
 :arith-cube-calls                3186
 :arith-cube-success              1
 :arith-diseq                     1807
 :arith-fixed-eqs                 14348
 :arith-gcd-calls                 12864
 :arith-gomory-cuts               4389
 :arith-grobner-calls             304
 :arith-grobner-conflicts         3
 :arith-hnf-calls                 2
 :arith-horner-calls              203
 :arith-horner-cross-nested-forms 1908
 :arith-lower                     44854
 :arith-make-feasible             48467
 :arith-max-columns               226
 :arith-max-rows                  124
 :arith-nla-add-bounds            769
 :arith-nla-lemmas                43
 :arith-nla-propagate-bounds      44
 :arith-nla-propagate-eq          125
 :arith-nra-calls                 430
 :arith-offset-eqs                214
 :arith-patches                   12864
 :arith-patches-success           129
 :arith-upper                     35784
 :conflicts                       6557
 :datatype-accessor-ax            420
 :datatype-constructor-ax         1029
 :datatype-splits                 171
 :decisions                       38335
 :del-clause                      28009
 :final-checks                    14997
 :interface-eqs                   230
 :max-memory                      48.08
 :memory                          48.08
 :minimized-lits                  3237
 :mk-bool-var                     102582
 :mk-clause                       28156
 :num-allocs                      237413302901.00
 :num-checks                      7595
 :propagations                    20002
 :recfun-macro-expansion          2151
 :rlimit-count                    33046031
 :time                            0.10)
Solver:
(declare-datatypes ((unit 0)) (((unit))))
(declare-datatypes ((SituationFamilialeCalculAPL 0)) (((mk!PersonneSeule (PersonneSeule!0 unit)) (mk!Couple (Couple!0 unit)))))
(declare-datatypes ((ZoneDHabitation 0)) (((mk!Zone1 (Zone1!0 unit)) (mk!Zone2 (Zone2!0 unit)) (mk!Zone3 (Zone3!0 unit)))))
(declare-fun loyer_principal_in () Int)
(declare-fun |ressources_ménage_arrondies_in| () Int)
(declare-fun date_courante_in () Int)
(declare-fun |nombre_personnes_à_charge_in| () Int)
(declare-fun |réduction_loyer_solidarité_in| () Int)
(declare-fun colocation_in () Bool)
(declare-fun logement_est_chambre_in () Bool)
(declare-fun |logement_meublé_d842_2_in| () Bool)
(declare-fun situation_familiale_calcul_apl_in () SituationFamilialeCalculAPL)
(declare-fun zone_in () ZoneDHabitation)
(declare-fun |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|
             ()
             Bool)
(define-funs-rec ( ( !round! ((x!1 Real)) Int))
                 ( (let ((a!1 (- (to_int (+ (- x!1) (/ 1.0 2.0))))))
                     (ite (>= x!1 0.0) (to_int (+ x!1 (/ 1.0 2.0))) a!1))))
(assert (>= loyer_principal_in 0))
(assert (>= |ressources_ménage_arrondies_in| 0))
(assert (>= date_courante_in 0))
(assert (not (not (<= |nombre_personnes_à_charge_in| 10))))
(assert (>= |réduction_loyer_solidarité_in| 0))
(assert (not (not (>= date_courante_in 3926))))
(assert (>= date_courante_in 3560))
(assert (>= |nombre_personnes_à_charge_in| 0))
(assert (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926)))
(assert (>= date_courante_in 3560))
(assert (not (not (not (and logement_est_chambre_in colocation_in)))))
(assert |logement_meublé_d842_2_in|)
(assert (not (= 3.0 (to_real 0))))
(assert (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in))))
(assert (not (= |nombre_personnes_à_charge_in| 0)))
(assert (not (= |nombre_personnes_à_charge_in| 1)))
(assert (not (= |nombre_personnes_à_charge_in| 2)))
(assert (not (= |nombre_personnes_à_charge_in| 3)))
(assert (not (= |nombre_personnes_à_charge_in| 4)))
(assert (not (= |nombre_personnes_à_charge_in| 5)))
(assert (not (= |nombre_personnes_à_charge_in| 6)))
(assert (and (not (<= 4383 date_courante_in)) (>= date_courante_in 3652)))
(assert (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in))))
(assert (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926) colocation_in))
(assert (not (and (>= date_courante_in 5021) colocation_in)))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          colocation_in)))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in)))
(assert (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926) colocation_in))
(assert (not ((_ is mk!Couple) situation_familiale_calcul_apl_in)))
(assert ((_ is mk!PersonneSeule) situation_familiale_calcul_apl_in))
(assert (not (>= date_courante_in 4748)))
(assert (not (and (>= date_courante_in 4564) (<= date_courante_in 4747))))
(assert (not (and (>= date_courante_in 4383) (not (<= 4564 date_courante_in)))))
(assert (and (not (<= 4383 date_courante_in)) (>= date_courante_in 3652)))
(assert (not (= |nombre_personnes_à_charge_in| 0)))
(assert (not (= |nombre_personnes_à_charge_in| 1)))
(assert (not (= |nombre_personnes_à_charge_in| 2)))
(assert (not (= |nombre_personnes_à_charge_in| 3)))
(assert (not (= |nombre_personnes_à_charge_in| 4)))
(assert (not (= |nombre_personnes_à_charge_in| 5)))
(assert (not (= |nombre_personnes_à_charge_in| 6)))
(assert (not (>= date_courante_in 5021)))
(assert (not (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in))))
(assert (not (= |nombre_personnes_à_charge_in| 0)))
(assert (not (and (>= date_courante_in 5021)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 5021)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 5021)
          colocation_in
          (>= |nombre_personnes_à_charge_in| 1))))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          colocation_in
          (>= |nombre_personnes_à_charge_in| 1))))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          colocation_in
          (>= |nombre_personnes_à_charge_in| 1))))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!PersonneSeule unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          colocation_in
          (= situation_familiale_calcul_apl_in (mk!Couple unit))
          (= |nombre_personnes_à_charge_in| 0))))
(assert (and (not (<= 4291 date_courante_in))
     (>= date_courante_in 3926)
     colocation_in
     (>= |nombre_personnes_à_charge_in| 1)))
(assert (not (not ((_ is mk!Zone3) zone_in))))
(assert (not ((_ is mk!Zone2) zone_in)))
(assert (not ((_ is mk!Zone1) zone_in)))
(assert (not (and (>= date_courante_in 5021)
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          logement_est_chambre_in
          |âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in|)))
(assert (not (and (>= date_courante_in 5021) logement_est_chambre_in)))
(assert (not (and (>= date_courante_in 4564)
          (not (<= 5021 date_courante_in))
          logement_est_chambre_in)))
(assert (not (and (>= date_courante_in 4291)
          (not (<= 4564 date_courante_in))
          logement_est_chambre_in)))
(assert (not (and (not (<= 4291 date_courante_in))
          (>= date_courante_in 3926)
          logement_est_chambre_in)))
(assert (>= date_courante_in 3560))
(assert ((_ is mk!Zone3) zone_in))
(assert (not ((_ is mk!Zone2) zone_in)))
(assert (not ((_ is mk!Zone1) zone_in)))
(assert (>= date_courante_in 3560))
(assert ((_ is mk!Zone3) zone_in))
(assert (not ((_ is mk!Zone2) zone_in)))
(assert (not ((_ is mk!Zone1) zone_in)))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 3542.0) (* 3542.0 (to_real |nombre_personnes_à_charge_in|))))))
  (<= ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))
      (+ 24717 a!1))))
(assert (not (>= date_courante_in 5021)))
(assert (not (and (>= date_courante_in 4564) (not (<= 5021 date_courante_in)))))
(assert (not (and (>= date_courante_in 4291) (not (<= 4564 date_courante_in)))))
(assert (and (not (<= 4291 date_courante_in)) (>= date_courante_in 3926)))
(assert (let ((a!1 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!2 (to_real ((_ !round! 0)
                      (* 1224.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!3 (>= ((_ !round! 0)
                 (+ (/ 45883.0 200.0)
                    (* (/ 17.0 200.0) a!1)
                    (* (/ 17.0 200.0) a!2)))
               3524)))
  (not a!3))))
(assert (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in))))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 5186.0) (* 5186.0 (to_real |nombre_personnes_à_charge_in|))))))
  (not (= (+ 35630 a!1) 0))))
(assert (not (= 100.0 (to_real 0))))
(assert (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in))))
(assert (let ((a!1 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!2 ((_ !round! 0)
             (+ (- 5186.0) (* 5186.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!3 (* 100.0 (/ a!1 (+ 35630.0 (to_real a!2))))))
(let ((a!4 (not (>= (to_real ((_ !round! 0) a!3)) 45.0))))
  (not a!4)))))
(assert (let ((a!1 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!2 ((_ !round! 0)
             (+ (- 5186.0) (* 5186.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!3 (* 100.0 (/ a!1 (+ 35630.0 (to_real a!2))))))
(let ((a!4 (not (>= (to_real ((_ !round! 0) a!3)) 75.0))))
  (and (>= (to_real ((_ !round! 0) a!3)) 45.0) a!4)))))
(assert (and (>= date_courante_in 3926) (not (<= 4291 date_courante_in))))
(assert (not (= 100000.0 (to_real 0))))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 183000.0)
                (* 30500.0 (to_real |nombre_personnes_à_charge_in|)))))
      (a!2 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!3 ((_ !round! 0)
             (+ (- 5186.0) (* 5186.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!4 (* 100.0 (/ a!2 (+ 35630.0 (to_real a!3))))))
(let ((a!5 (+ (- (/ 405.0 2.0)) (* (/ 9.0 2.0) (to_real ((_ !round! 0) a!4))))))
(let ((a!6 (+ (/ 209.0 10000.0)
              (* (- (/ 3.0 5000.0)) (to_real |nombre_personnes_à_charge_in|))
              (* (/ 1.0 100000.0) (to_real ((_ !round! 0) a!5))))))
(let ((a!7 (* (+ (- 924600.0)
                 (to_real |ressources_ménage_arrondies_in|)
                 (* (- 1.0) (to_real a!1)))
              a!6)))
  (not (not (<= 0 ((_ !round! 0) a!7))))))))))
(assert (let ((a!1 ((_ !round! 0)
             (+ (- 183000.0)
                (* 30500.0 (to_real |nombre_personnes_à_charge_in|)))))
      (a!2 (to_real ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))))
      (a!3 ((_ !round! 0)
             (+ (- 5186.0) (* 5186.0 (to_real |nombre_personnes_à_charge_in|))))))
(let ((a!4 (* 100.0 (/ a!2 (+ 35630.0 (to_real a!3))))))
(let ((a!5 (+ (- (/ 405.0 2.0)) (* (/ 9.0 2.0) (to_real ((_ !round! 0) a!4))))))
(let ((a!6 (+ (/ 209.0 10000.0)
              (* (- (/ 3.0 5000.0)) (to_real |nombre_personnes_à_charge_in|))
              (* (/ 1.0 100000.0) (to_real ((_ !round! 0) a!5))))))
(let ((a!7 (* (+ (- 924600.0)
                 (to_real |ressources_ménage_arrondies_in|)
                 (* (- 1.0) (to_real a!1)))
              a!6)))
(let ((a!8 (+ ((_ !round! 0) (* (/ 2.0 3.0) (to_real loyer_principal_in)))
              ((_ !round! 0)
                (* 1224.0 (to_real |nombre_personnes_à_charge_in|)))
              (* (- 1) ((_ !round! 0) a!7)))))
  (not (<= 825 a!8)))))))))

